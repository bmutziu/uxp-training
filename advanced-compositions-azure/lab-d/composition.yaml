apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xclusters.azure.platformref.upbound.io
spec:
  writeConnectionSecretsToNamespace: upbound-system
  compositeTypeRef:
    apiVersion: azure.platformref.upbound.io/v1alpha1
    kind: XCluster
  resources:
    - base:
        apiVersion: # Fill in the custom platform API Group
        kind: # Fill in the XNetwork kind
      patches:
        - fromFieldPath: spec.id
          toFieldPath: spec.id
    - base:
        apiVersion: # Fill in the custom platform API Group
        kind: # Fill in the XAKS kind
      connectionDetails:
        - fromConnectionSecretKey: kubeconfig
      patches:
        - fromFieldPath: spec.id
          toFieldPath: spec.id
        - fromFieldPath: spec.id
          toFieldPath: spec.writeConnectionSecretToRef.name
        - fromFieldPath: spec.writeConnectionSecretToRef.namespace
          toFieldPath: spec.writeConnectionSecretToRef.namespace
        - fromFieldPath: spec.parameters.nodes.count
          toFieldPath: spec.parameters.nodes.count
        - fromFieldPath: spec.parameters.nodes.size
          toFieldPath: spec.parameters.nodes.size
        # Patch from custom Status down to nested XAKS XR
        # Notice romFieldPath: Required that prevents the XR creation until
        # fromFieldPath field has the non-empty value
#       - fromFieldPath: status.authorizedIpRange
#         toFieldPath: spec.parameters.authorizedIpRange
#         policy:
#           fromFieldPath: Required
    - base:
        apiVersion: # Fill in the custom platform API Group
        kind: # Fill in the XServices kind
      patches:
        - fromFieldPath: spec.id
          toFieldPath: metadata.name
        - fromFieldPath: spec.id
          toFieldPath: spec.providerConfigRef.name
        - fromFieldPath: spec.parameters.services.operators.prometheus.version
          toFieldPath: spec.operators.prometheus.version
